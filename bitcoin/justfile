# Bitcoin Wallet CLI - Just Commands

# Start Bitcoin regtest with automine (default: 10s blocks)
start:
    scripts/start_regtest.sh

# Start with custom block time
start-fast BLOCK_TIME="3":
    BLOCK_TIME={{BLOCK_TIME}} scripts/start_regtest.sh

# Start without automine
start-no-mine:
    AUTOMINE=false scripts/start_regtest.sh

# Stop Bitcoin regtest and automine
stop:
    scripts/stop_bitcoind.sh

# Get wallet balance for maker
balance-maker:
    cargo run -- --wallet wallet/maker.toml

# Get wallet balance for admin  
balance-admin:
    cargo run -- --wallet wallet/admin.toml

# Get wallet balance for taker
balance-taker:
    cargo run -- --wallet wallet/taker.toml

# Get balance for any wallet file
balance WALLET:
    cargo run -- --wallet {{WALLET}}

# Get wallet address for admin
address-admin:
    cargo run -- --wallet wallet/admin.toml address

# Get wallet address for maker
address-maker:
    cargo run -- --wallet wallet/maker.toml address

# Get wallet address for taker
address-taker:
    cargo run -- --wallet wallet/taker.toml address

# Get address for any wallet file
address WALLET:
    cargo run -- --wallet {{WALLET}} address

# Send BTC from admin to maker
send-admin-to-maker AMOUNT:
    cargo run -- --wallet wallet/admin.toml send --to wallet/maker.toml --amount {{AMOUNT}}

# Send BTC from admin to taker
send-admin-to-taker AMOUNT:
    cargo run -- --wallet wallet/admin.toml send --to wallet/taker.toml --amount {{AMOUNT}}

# Send BTC from maker to taker
send-maker-to-taker AMOUNT:
    cargo run -- --wallet wallet/maker.toml send --to wallet/taker.toml --amount {{AMOUNT}}

# Send BTC from taker to maker
send-taker-to-maker AMOUNT:
    cargo run -- --wallet wallet/taker.toml send --to wallet/maker.toml --amount {{AMOUNT}}

# Send BTC between any wallets
send FROM TO AMOUNT:
    cargo run -- --wallet {{FROM}} send --to {{TO}} --amount {{AMOUNT}}

# HTLC (Hash Time Locked Contract) Commands
# Create HTLC from admin to maker
htlc-create-admin-to-maker AMOUNT SECRET TIMEOUT:
    cargo run -- --wallet wallet/admin.toml htlc-create --to wallet/maker.toml --amount {{AMOUNT}} --secret {{SECRET}} --timeout-block {{TIMEOUT}}

# Create HTLC from admin to taker  
htlc-create-admin-to-taker AMOUNT SECRET TIMEOUT:
    cargo run -- --wallet wallet/admin.toml htlc-create --to wallet/taker.toml --amount {{AMOUNT}} --secret {{SECRET}} --timeout-block {{TIMEOUT}}

# Create HTLC from maker to taker
htlc-create-maker-to-taker AMOUNT SECRET TIMEOUT:
    cargo run -- --wallet wallet/maker.toml htlc-create --to wallet/taker.toml --amount {{AMOUNT}} --secret {{SECRET}} --timeout-block {{TIMEOUT}}

# Create HTLC from taker to maker
htlc-create-taker-to-maker AMOUNT SECRET TIMEOUT:
    cargo run -- --wallet wallet/taker.toml htlc-create --to wallet/maker.toml --amount {{AMOUNT}} --secret {{SECRET}} --timeout-block {{TIMEOUT}}

# Create HTLC between any wallets
htlc-create FROM TO AMOUNT SECRET TIMEOUT:
    cargo run -- --wallet {{FROM}} htlc-create --to {{TO}} --amount {{AMOUNT}} --secret {{SECRET}} --timeout-block {{TIMEOUT}}

# Claim HTLC with admin wallet (specify original sender wallet)
htlc-claim-admin CONTRACT_ID SECRET AMOUNT TIMEOUT FROM:
    cargo run -- --wallet wallet/admin.toml htlc-claim --contract-id {{CONTRACT_ID}} --secret {{SECRET}} --amount {{AMOUNT}} --timeout-block {{TIMEOUT}} --from {{FROM}}

# Claim HTLC with maker wallet (specify original sender wallet)
htlc-claim-maker CONTRACT_ID SECRET AMOUNT TIMEOUT FROM:
    cargo run -- --wallet wallet/maker.toml htlc-claim --contract-id {{CONTRACT_ID}} --secret {{SECRET}} --amount {{AMOUNT}} --timeout-block {{TIMEOUT}} --from {{FROM}}

# Claim HTLC with taker wallet (specify original sender wallet)
htlc-claim-taker CONTRACT_ID SECRET AMOUNT TIMEOUT FROM:
    cargo run -- --wallet wallet/taker.toml htlc-claim --contract-id {{CONTRACT_ID}} --secret {{SECRET}} --amount {{AMOUNT}} --timeout-block {{TIMEOUT}} --from {{FROM}}

# Claim HTLC with any wallet (specify original sender wallet)
htlc-claim WALLET CONTRACT_ID SECRET AMOUNT TIMEOUT FROM:
    cargo run -- --wallet {{WALLET}} htlc-claim --contract-id {{CONTRACT_ID}} --secret {{SECRET}} --amount {{AMOUNT}} --timeout-block {{TIMEOUT}} --from {{FROM}}

# Refund HTLC with admin wallet (after timeout)
htlc-refund-admin CONTRACT_ID SECRET AMOUNT TIMEOUT TO:
    cargo run -- --wallet wallet/admin.toml htlc-refund --contract-id {{CONTRACT_ID}} --secret {{SECRET}} --amount {{AMOUNT}} --timeout-block {{TIMEOUT}} --to {{TO}}

# Refund HTLC with maker wallet (after timeout)
htlc-refund-maker CONTRACT_ID SECRET AMOUNT TIMEOUT TO:
    cargo run -- --wallet wallet/maker.toml htlc-refund --contract-id {{CONTRACT_ID}} --secret {{SECRET}} --amount {{AMOUNT}} --timeout-block {{TIMEOUT}} --to {{TO}}

# Refund HTLC with taker wallet (after timeout)
htlc-refund-taker CONTRACT_ID SECRET AMOUNT TIMEOUT TO:
    cargo run -- --wallet wallet/taker.toml htlc-refund --contract-id {{CONTRACT_ID}} --secret {{SECRET}} --amount {{AMOUNT}} --timeout-block {{TIMEOUT}} --to {{TO}}

# Refund HTLC with any wallet (after timeout)
htlc-refund WALLET CONTRACT_ID SECRET AMOUNT TIMEOUT TO:
    cargo run -- --wallet {{WALLET}} htlc-refund --contract-id {{CONTRACT_ID}} --secret {{SECRET}} --amount {{AMOUNT}} --timeout-block {{TIMEOUT}} --to {{TO}}

# HTLC Testing Examples
# Example: Create 0.5 BTC HTLC with 500 block timeout
htlc-test-create:
    just htlc-create-admin-to-maker 0.5 "test-secret-123" 500

# Example: Claim the test HTLC (use actual contract ID from creation output)
htlc-test-claim CONTRACT_ID="REPLACE_WITH_ACTUAL_CONTRACT_ID":
    just htlc-claim-maker {{CONTRACT_ID}} "test-secret-123" 0.5 500 wallet/admin.toml

# Example: Refund the test HTLC after timeout (use actual contract ID from creation output)
htlc-test-refund CONTRACT_ID="REPLACE_WITH_ACTUAL_CONTRACT_ID":
    just htlc-refund-admin {{CONTRACT_ID}} "test-secret-123" 0.5 500 wallet/maker.toml

# Build the project
build:
    cargo build

# Run tests
test:
    cargo test

# Run functional tests
fn-test:
    cargo test -- --test-threads=1 --no-capture

# Clean regtest data volume
clean:
    scripts/stop_bitcoind.sh
    rm -rf ./data
    echo "ðŸ§¹ Regtest data cleared"